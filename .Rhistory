Cgcount = hist(Cgran, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,40),
xlab = "meters", main = 'Cricetids - PE, PM, RM')
xline(Cgran_brkpt, lwd = 2, col = "indianred")
focount = hist(foli, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,25),
xlab = "meters", main = 'folivores - SH, SF')
xline(foli_brkpt, lwd = 2, col = "indianred")
nacount = hist(naometers, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,25),
xlab = "meters", main = 'neotoma - NA')
xline(nao_brkpt, lwd = 2, col = "indianred")
incount = hist(insectiv, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,120),
xlab = "meters", main = 'insectivores - OT, OL')
xline(ins_brkpt, lwd = 2, col = "indianred")
# concatenate distance vectors for recaptured individuals by GUILD
Hgran = c(dmmeters, dometers, pbmeters, ppmeters, pfmeters)
Cgran = c(pemeters, pmmeters, rmmeters)
foli = c(shmeters, sfmeters) #separate NAO because they use different strategy - MIDDENS
insectiv = c(otmeters, olmeters)
# find breakpoints to use in MARK data structure for future analyses
# data reasonably well fits a lognormal distribution (eyeball and J. Powell)
# breakpoint = mean(logdata) + sd(logdata) of all the distances traveled by recaptured individuals
Hgran_brkpt = expm1(mean(log1p(Hgran)) + sd(log1p(Hgran)))
Cgran_brkpt = expm1(mean(log1p(Cgran)) + sd(log1p(Cgran)))
foli_brkpt = expm1(mean(log1p(foli)) + sd(log1p(foli)))
nao_brkpt = expm1(mean(log1p(naometers)) + sd(log1p(naometers)))
ins_brkpt = expm1(mean(log1p(insectiv)) + sd(log1p(insectiv)))
# get a vector unique tags, then get a vector of distances moved for all recaptured individuals, by SPECIES
#heteromyids
dmtags = unique(het[het$species == "DM",]$tag); dotags = unique(het[het$species == "DO",]$tag); pbtags = unique(het[het$species == "PB",]$tag); pptags = unique(het[het$species == "PP",]$tag); pftags = unique(het[het$species == "PF",]$tag)
dmmeters = distance_moved(het[het$species == "DM",], dmtags); dometers = distance_moved(het[het$species == "DO",], dotags); pbmeters = distance_moved(het[het$species == "PB",], pbtags); ppmeters = distance_moved(het[het$species == "PP",], pptags); pfmeters = distance_moved(het[het$species == "PF",], pftags)
#cricetids
petags = unique(cricet[cricet$species == "PE",]$tag); pmtags = unique(cricet[cricet$species == "PM",]$tag); rmtags = unique(cricet[cricet$species == "RM",]$tag)
pemeters = distance_moved(cricet[cricet$species == "PE",], petags); pmmeters = distance_moved(cricet[cricet$species == "PM",], pmtags); rmmeters = distance_moved(cricet[cricet$species == "RM",], rmtags)
#folivores
shtags = unique(foliv[foliv$species == "SH",]$tag); sftags = unique(foliv[foliv$species == "SF",]$tag); naotags = unique(foliv[foliv$species == "NAO",]$tag)
shmeters = distance_moved(foliv[foliv$species == "SH",], shtags); sfmeters = distance_moved(foliv[foliv$species == "SF",], sftags); naometers = distance_moved(foliv[foliv$species == "NAO",], naotags)
#insectivores
oltags = unique(insec[insec$species == "OL",]$tag); ottags = unique(insec[insec$species == "OT",]$tag)
olmeters = distance_moved(insec[insec$species == "OL",], oltags); otmeters = distance_moved(insec[insec$species == "OT",], ottags)
# concatenate distance vectors for recaptured individuals by GUILD
Hgran = c(dmmeters, dometers, pbmeters, ppmeters, pfmeters)
Cgran = c(pemeters, pmmeters, rmmeters)
foli = c(shmeters, sfmeters) #separate NAO because they use different strategy - MIDDENS
insectiv = c(otmeters, olmeters)
# find breakpoints to use in MARK data structure for future analyses
# data reasonably well fits a lognormal distribution (eyeball and J. Powell)
# breakpoint = mean(logdata) + sd(logdata) of all the distances traveled by recaptured individuals
Hgran_brkpt = expm1(mean(log1p(Hgran)) + sd(log1p(Hgran)))
Cgran_brkpt = expm1(mean(log1p(Cgran)) + sd(log1p(Cgran)))
foli_brkpt = expm1(mean(log1p(foli)) + sd(log1p(foli)))
nao_brkpt = expm1(mean(log1p(naometers)) + sd(log1p(naometers)))
ins_brkpt = expm1(mean(log1p(insectiv)) + sd(log1p(insectiv)))
Hgcount
v6 = seq(-3,500,6)
Hgcount = hist(Hgran, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0, 3500),
xlab = "meters", main = 'Heteromyids - PF, PP, PB, DO, DM')
xline(Hgran_brkpt, lwd = 2, col = "indianred")
Cgcount = hist(Cgran, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,40),
xlab = "meters", main = 'Cricetids - PE, PM, RM')
xline(Cgran_brkpt, lwd = 2, col = "indianred")
focount = hist(foli, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,25),
xlab = "meters", main = 'folivores - SH, SF')
xline(foli_brkpt, lwd = 2, col = "indianred")
nacount = hist(naometers, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,25),
xlab = "meters", main = 'neotoma - NA')
xline(nao_brkpt, lwd = 2, col = "indianred")
incount = hist(insectiv, breaks = v6, col = 'gray60', xlim = c(0,500), ylim = c(0,120),
xlab = "meters", main = 'insectivores - OT, OL')
xline(ins_brkpt, lwd = 2, col = "indianred")
Hgcount
Cgcount
Cgran_brkpt
focount
nacount
incount
Hgran
Hgcount
h = c(0, 1,2, 3,4)
log(h)
log(h+0.0000001)
mean(log(h+0.00000001))
mean(log1p(h))
mean(h)
exp(mean(log(h+0.00000001)))
expm1(mean(log1p(h)))
mean(h)
expm(mean(log(h+0.00000001)))
sink()
doreprd
mean(doreprd)
mean(ot_reprd)
mean(otreprd)
mean(pmreprd)
mean(pereprd)
mean(naoreprd)
mean(pbreprd)
head(het)
mean(het[het$species == "DM",]$wgt)
mean(het[het$species == "DM",]$wgt, na.rm = T)
mean(het[het$species == "DO",]$wgt, na.rm = T)
mean(het[het$species == "PB",]$wgt, na.rm = T)
mean(het[het$species == "PP",]$wgt, na.rm = T)
mean(het[het$species == "PF",]$wgt, na.rm = T)
mean(cricet[cricet$species == "PE",]$wgt, na.rm = T)
mean(cricet[cricet$species == "PM",]$wgt, na.rm = T)
mean(cricet[cricet$species == "RM",]$wgt, na.rm = T)
mean(foliv[foliv$species == "SH",]$wgt, na.rm = T)
mean(foliv[foliv$species == "SF",]$wgt, na.rm = T)
mean(foliv[foliv$species == "NAO",]$wgt, na.rm = T)
mean(insec[insec$species == "OT",]$wgt, na.rm = T)
mean(insec[insec$species == "OL",]$wgt, na.rm = T)
mean(dmmeters)
mean(dometers)
mean(pbmeters)
mean(ppmeters)
mean(pfmeters)
mean(pemeters)
mean(pmmeters)
mean(rmmeters)
mean(shmeters)
mean(sfmeters)
mean(naometers)
mean(otmeters)
mean(olmeters)
sd(dmmeters)
sd(dometers)
sd(pbmeters)
sd(ppmeters)
sd(pfmeters)
count = hist(dmmeters, break = v6)
count = hist(dmmeters, breaks = v6)
count
count = hist(dometers, breaks = v6)
count
count = hist(pbmeters, breaks = v6)
count
count = hist(ppmeters, breaks = v6)
count
count = hist(pfmeters, breaks = v6)
count
count = hist(pemeters, breaks = v6)
count
count = hist(pmmeters, breaks = v6)
count
count = hist(rmmeters, breaks = v6)
count
count = hist(shmeters, breaks = v6)
count
count = hist(sfmeters, breaks = v6)
count
count = hist(naometers, breaks = v6)
count
count = hist(otmeters, breaks = v6)
count
count = hist(olmeters, breaks = v6)
count
max(dmmeters)
max(dometers)
max(pbmeters)
max(ppmeters)
max(pfmeters)
max(pemeters)
max(pmmeters)
max(rmmeters)
max(shmeters)
max(sfmeters)
max(naometers)
max(otmeters)
max(olmeters)
library(calibrate)
library(fields)
#---------------------------------------------------------------------------------
#          setup - select wd, import data, source code,  file to collect results
#---------------------------------------------------------------------------------
#set working directory
wd = "C://Users//sarah//Documents//GitHub//portal-rodent-dispersal"
setwd(wd)
source("movement_fxns.R")
#import the data by guild
het = read.csv("rawdata//heteromyids_2000-2009.csv")   # DO, DM, PB, PP, PF
cricet = read.csv("rawdata//cricetids_2000-2009.csv")  # PE, PM, RM
foliv = read.csv("rawdata//folivores_2000-2009.csv")   # SH, SF, NA (as NAO)
insec = read.csv("rawdata//onychomys_2000-2009.csv")   # OT, OL
# output directed to rodent_results.txt in wd. output is appended
# to existing file. output also sent to terminal.
sink("rodent_results.txt", append=TRUE, split=TRUE)
#---------------------------------------------------------------------------------
#          clean up the data
#---------------------------------------------------------------------------------
# change some cols from factor to character class
het$tag = as.character(het$tag); cricet$tag = as.character(cricet$tag); foliv$tag = as.character(foliv$tag); insec$tag = as.character(insec$tag)
het$species = as.character(het$species); cricet$species = as.character(cricet$species); foliv$species = as.character(foliv$species); insec$species = as.character(insec$species)
het$sex = as.character(het$sex); cricet$sex = as.character(cricet$sex); foliv$sex = as.character(foliv$sex); insec$sex = as.character(insec$sex)
# give untagged individuals a unique 7-number code
het = id_unknowns(het, 16); cricet = id_unknowns(cricet, 16); foliv = id_unknowns(foliv, 16); insec = id_unknowns(insec, 16)
# get rid of 'bad data'; deletes data that is not a pit tag, where sex is inconsistent or where species is inconsistent.
het = subsetDat(het); cricet = subsetDat(cricet); foliv = subsetDat(foliv); insec = subsetDat(insec)
#---------------------------------------------------------------------------------
#          calculate life-history details - reproduction, temporal persistence
#---------------------------------------------------------------------------------
#proportion of reproductive females by month
doreprd = mean_mo_repro(subset(het, species == "DO" & sex == "F")); dmreprd = mean_mo_repro(subset(het, species == "DM" & sex == "F")); pfreprd = mean_mo_repro(subset(het, species == "PF" & sex == "F")); ppreprd = mean_mo_repro(subset(het, species == "PP" & sex == "F")); pbreprd = mean_mo_repro(subset(het, species == "PB" & sex == "F"));
pereprd = mean_mo_repro(subset(cricet, species == "PE" & sex == "F")); pmreprd = mean_mo_repro(subset(cricet, species == "PM" & sex == "F")); rmreprd = mean_mo_repro(subset(cricet, species == "RM" & sex == "F"))
shreprd = mean_mo_repro(subset(foliv, species == "SH" & sex == "F")); sfreprd = mean_mo_repro(subset(foliv, species == "SF" & sex == "F")); naoreprd = mean_mo_repro(subset(foliv, species == "NAO" & sex == "F"))
otreprd = mean_mo_repro(subset(insec, species == "OT" & sex == "F")); olreprd = mean_mo_repro(subset(insec, species == "OL" & sex == "F"))
#proportion of years they were seen in
doyr = length(unique(het[het$species=="DO",]$yr))/10; dmyr = length(unique(het[het$species=="DM",]$yr))/10; pfyr = length(unique(het[het$species=="PF",]$yr))/10; ppyr = length(unique(het[het$species=="PP",]$yr))/10; pbyr = length(unique(het[het$species=="PB",]$yr))/10
peyr = length(unique(cricet[cricet$species=="PE",]$yr))/10; pmyr = length(unique(cricet[cricet$species=="PM",]$yr))/10; rmyr = length(unique(cricet[cricet$species=="RM",]$yr))/10
shyr = length(unique(foliv[foliv$species=="SH",]$yr))/10; sfyr = length(unique(foliv[foliv$species=="SF",]$yr))/10; naoyr = length(unique(foliv[foliv$species=="NAO",]$yr))/10
otyr = length(unique(insec[insec$species=="OT",]$yr))/10; olyr = length(unique(insec[insec$species=="OL",]$yr))/10
# average number of months they were seen in during years in which they were present
domo = mean_win_yr_occ(subset(het, species == "DO")); dmmo = mean_win_yr_occ(subset(het, species == "DM")); pfmo = mean_win_yr_occ(subset(het, species == "PF")); ppmo = mean_win_yr_occ(subset(het, species == "PP")); pbmo = mean_win_yr_occ(subset(het, species == "PB"))
pemo = mean_win_yr_occ(subset(cricet, species == "PE")); pmmo = mean_win_yr_occ(subset(cricet, species == "PM")); rmmo = mean_win_yr_occ(subset(cricet, species == "RM"))
shmo = mean_win_yr_occ(subset(foliv, species == "SH")); sfmo = mean_win_yr_occ(subset(foliv, species == "SF")); naomo = mean_win_yr_occ(subset(foliv, species == "NAO"))
otmo = mean_win_yr_occ(subset(insec, species == "OT")); olmo = mean_win_yr_occ(subset(insec, species == "OL"))
#mean abundance within all years
doabun = allyrs_abun(subset(het, species == "DO")); dmabun = mean_allyrs_abun(subset(het, species == "DM")); pfabun = mean_allyrs_abun(subset(het, species == "PF")); ppabun = mean_allyrs_abun(subset(het, species == "PP")); pbabun = mean_allyrs_abun(subset(het, species == "PB"))
peabun = mean_allyrs_abun(subset(cricet, species == "PE")); pmabun = mean_allyrs_abun(subset(cricet, species == "PM")); rmabun = mean_allyrs_abun(subset(cricet, species == "RM"))
shabun = mean_allyrs_abun(subset(foliv, species == "SH")); sfabun = mean_allyrs_abun(subset(foliv, species == "SF")); naoabun = mean_allyrs_abun(subset(foliv, species == "NAO"))
otabun = mean_allyrs_abun(subset(insec, species == "OT")); olabun = mean_allyrs_abun(subset(insec, species == "OL"))
#---------------------------------------------------------------------------------
#          calculate movement distances, multi-state capture histories
#---------------------------------------------------------------------------------
# get a vector unique tags, then get a vector of distances moved for all recaptured individuals, by SPECIES
#heteromyids
dmtags = unique(het[het$species == "DM",]$tag); dotags = unique(het[het$species == "DO",]$tag); pbtags = unique(het[het$species == "PB",]$tag); pptags = unique(het[het$species == "PP",]$tag); pftags = unique(het[het$species == "PF",]$tag)
dmmeters = distance_moved(het[het$species == "DM",], dmtags); dometers = distance_moved(het[het$species == "DO",], dotags); pbmeters = distance_moved(het[het$species == "PB",], pbtags); ppmeters = distance_moved(het[het$species == "PP",], pptags); pfmeters = distance_moved(het[het$species == "PF",], pftags)
#cricetids
petags = unique(cricet[cricet$species == "PE",]$tag); pmtags = unique(cricet[cricet$species == "PM",]$tag); rmtags = unique(cricet[cricet$species == "RM",]$tag)
pemeters = distance_moved(cricet[cricet$species == "PE",], petags); pmmeters = distance_moved(cricet[cricet$species == "PM",], pmtags); rmmeters = distance_moved(cricet[cricet$species == "RM",], rmtags)
#folivores
shtags = unique(foliv[foliv$species == "SH",]$tag); sftags = unique(foliv[foliv$species == "SF",]$tag); naotags = unique(foliv[foliv$species == "NAO",]$tag)
shmeters = distance_moved(foliv[foliv$species == "SH",], shtags); sfmeters = distance_moved(foliv[foliv$species == "SF",], sftags); naometers = distance_moved(foliv[foliv$species == "NAO",], naotags)
#insectivores
oltags = unique(insec[insec$species == "OL",]$tag); ottags = unique(insec[insec$species == "OT",]$tag)
olmeters = distance_moved(insec[insec$species == "OL",], oltags); otmeters = distance_moved(insec[insec$species == "OT",], ottags)
# concatenate distance vectors for recaptured individuals by GUILD
Hgran = c(dmmeters, dometers, pbmeters, ppmeters, pfmeters)
Cgran = c(pemeters, pmmeters, rmmeters)
foli = c(shmeters, sfmeters) #separate NAO because they use different strategy - MIDDENS
insectiv = c(otmeters, olmeters)
doreprd = mean_mo_repro(subset(het, species == "DO" & sex == "F"));
domo = mean_win_yr_occ(subset(het, species == "DO"));
mean_win_yr_occ = function (data){
#finds the mean within year occupancy for each month for a given species, returns a single value
uniq_mos = c(10, 8, 10, 10, 8, 9, 9, 10, 12, 12) #not all months were trapped in all years
mos = c(1:12)
years = c(2000:2009)
proportion_mos = c()
for (y in 1:length (years)){
yr_data = subset(data, yr == years[y])
if(length(yr_data) > 0) {  #don't use years where it wasn't captured
m = length(unique(yr_data$mo))/uniq_mos[y]
proportion_mos = append(proportion_mos, m)
}
}
months = round(mean(proportion_mos),4)
return (months)
}
domo = mean_win_yr_occ(subset(het, species == "DO"));
domo
doabun = allyrs_abun(subset(het, species == "DO"));
#mean abundance within all years
doabun = allyrs_abun(subset(het, species == "DO")); dmabun = allyrs_abun(subset(het, species == "DM")); pfabun = allyrs_abun(subset(het, species == "PF")); ppabun = allyrs_abun(subset(het, species == "PP")); pbabun = allyrs_abun(subset(het, species == "PB"))
peabun = allyrs_abun(subset(cricet, species == "PE")); pmabun = allyrs_abun(subset(cricet, species == "PM")); rmabun = allyrs_abun(subset(cricet, species == "RM"))
shabun = allyrs_abun(subset(foliv, species == "SH")); sfabun = allyrs_abun(subset(foliv, species == "SF")); naoabun = allyrs_abun(subset(foliv, species == "NAO"))
otabun = allyrs_abun(subset(insec, species == "OT")); olabun = allyrs_abun(subset(insec, species == "OL"))
doabun
shabun
d= cbind(doabun, dmabun,pbabun)
d
sink()
abuns = cbind(doabun, dmabun, pbabun, ppabun, pfabun, peabun, pmabun, rmabun, shabun, sfabun, naoabun, otabun, olabun)
abuns
row = 1
yrdat = abuns[row,]
yrdat
reldat = yrdat/sum(yrdat)
reldat
sum(yrdat)
17/528
plot(c(1:13), sort(reldat))
plot(c(1:13), sort(reldat, decreasing = TRUE))
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b")
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b", pch = 19)
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b", pch = 19, ylim = c(0,1))
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b", pch = 19, ylim = c(0,1), xlab = "Rank", ylab = "Relative Abundance")
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b", pch = 19, ylim = c(0,0.75), xlab = "Rank", ylab = "Relative Abundance")
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = yrdat/sum(yrdat)
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b", pch = 19, ylim = c(0,1), xlab = "Rank", ylab = "Relative Abundance")
}
mtext(years[row], site = 3)
years = c(2000:2009)
mtext(years[row], site = 3)
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
plot(c(1:13), sort(reldat, decreasing = TRUE), type = "b", pch = 19, ylim = c(0,1),
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
mtext(years[row], site = 3)
abuns
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
reldat
ranks = c(1:13)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,1),
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
mtext(years[row], site = 3)
mtext(years[row], side = 3)
textxy(c(1:13, reldat))
textxy(c(1:13), reldat))
textxy(c(1:13), reldat)
textxy(c(1:13), reldat, labs = names(reldat))
labels = as.character(names(reldat))
labels
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,1),
x = strtrim(labels,2)
x
labels = strtrim(as.character(names(reldat)),2)
labels
nonzero = reldat[reldat>0]
nonzero
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,1),
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,1),
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels)
length(nonzero)
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,1),
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels)
}
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n")
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels)
}
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12)))
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
c = ("a", "b")
c = c("a", "b")
b = upper(c)
b = uppercase(c)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 1)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
pdf("Fig5_rank_abundance.pdf", 7, 10, pointsize = 10)
par(mfrow=c(2,5))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
#------------------------------------------
pdf("Fig5_rank_abundance.pdf",7, 10, size = "letter", pointsize = 10)
par(mfrow=c(5,2))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
pdf("Fig5_rank_abundance.pdf", size = "letter", pointsize = 10)
par(mfrow=c(5,2))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
#------------------------------------------
pdf("Fig5_rank_abundance.pdf", paper = "letter", pointsize = 10)
par(mfrow=c(5,2))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
#------------------------------------------
pdf("Fig5_rank_abundance.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,2))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
pdf("Fig5_rank_abundance.pdf", 5, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,2))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
pdf("Fig5_rank_abundance.pdf", 5, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,2), mar=c(2,2,2,0.5), oma=c(1.5,2,1,1)))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
pdf("Fig5_rank_abundance.pdf", 5, 10, paper = "letter", pointsize = 10)
par(mfrow=c(3,2))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
pdf("Fig5_rank_abundance.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(4,3))
years = c(2000:2009)
ranks = c(1:13)
for (row in 1:nrow(abuns)){
yrdat = abuns[row,]
reldat = sort(yrdat/sum(yrdat), decreasing = TRUE)
nonzero = reldat[reldat>0]
labels = strtrim(as.character(names(nonzero)),2)
plot(ranks, reldat, type = "b", pch = 19, ylim = c(0,0.6),
xlab = "Rank", ylab = "Relative Abundance", bty = "n", xaxp = c(1, 13, 12))
mtext(years[row], side = 3)
textxy(c(1:length(nonzero)), nonzero, labs = labels, cx = 0.75)
}
dev.off()
abuns
