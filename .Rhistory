abline(h = 0.95, lty = 2, col = 'gray40', lwd = 1)
dev.off()
# get a vector unique tags, then get a vector of distances moved for all recaptured individuals, by SPECIES
#heteromyids
dmtags = unique(het[het$species == "DM",]$tag); dotags = unique(het[het$species == "DO",]$tag); pbtags = unique(het[het$species == "PB",]$tag); pptags = unique(het[het$species == "PP",]$tag); pftags = unique(het[het$species == "PF",]$tag)
dmmeters = distance_moved(het[het$species == "DM",], dmtags); dometers = distance_moved(het[het$species == "DO",], dotags); pbmeters = distance_moved(het[het$species == "PB",], pbtags); ppmeters = distance_moved(het[het$species == "PP",], pptags); pfmeters = distance_moved(het[het$species == "PF",], pftags)
#cricetids
petags = unique(cricet[cricet$species == "PE",]$tag); pmtags = unique(cricet[cricet$species == "PM",]$tag); rmtags = unique(cricet[cricet$species == "RM",]$tag)
pemeters = distance_moved(cricet[cricet$species == "PE",], petags); pmmeters = distance_moved(cricet[cricet$species == "PM",], pmtags); rmmeters = distance_moved(cricet[cricet$species == "RM",], rmtags)
#folivores
shtags = unique(foliv[foliv$species == "SH",]$tag); sftags = unique(foliv[foliv$species == "SF",]$tag); naotags = unique(foliv[foliv$species == "NAO",]$tag)
shmeters = distance_moved(foliv[foliv$species == "SH",], shtags); sfmeters = distance_moved(foliv[foliv$species == "SF",], sftags); naometers = distance_moved(foliv[foliv$species == "NAO",], naotags)
#insectivores
oltags = unique(insec[insec$species == "OL",]$tag); ottags = unique(insec[insec$species == "OT",]$tag)
olmeters = distance_moved(insec[insec$species == "OL",], oltags); otmeters = distance_moved(insec[insec$species == "OT",], ottags)
# concatenate distance vectors for recaptured individuals by GUILD
Hgran = c(dmmeters, dometers, pbmeters, ppmeters, pfmeters)
Cgran = c(pemeters, pmmeters, rmmeters)
foli = c(shmeters, sfmeters) #separate NAO because they use different strategy - MIDDENS
insectiv = c(otmeters, olmeters)
# find breakpoints to use in MARK data structure for future analyses
# data reasonably well fits a lognormal distribution (eyeball and J. Powell)
# breakpoint = mean(logdata) + sd(logdata) of all the distances traveled by recaptured individuals
# using log1p, and back transforming using expm1 should solve the problem of lots of zeros
Hgran_brkpt = expm1(mean(log1p(Hgran)) + sd(log1p(Hgran)))
Cgran_brkpt = expm1(mean(log1p(Cgran)) + sd(log1p(Cgran)))
foli_brkpt = expm1(mean(log1p(foli)) + sd(log1p(foli)))
nao_brkpt = expm1(mean(log1p(naometers)) + sd(log1p(naometers)))
ins_brkpt = expm1(mean(log1p(insectiv)) + sd(log1p(insectiv)))
# Get MARK capture histories
## add unique breakpoints for each species based on histogram data of movement
periods = c(261:380)
exclosures = c(5, 7, 10, 16, 23, 24)
krat_excl = c(5, 7, 10, 16, 23, 24, 3, 6, 13, 15, 18, 19, 20, 21)
DO_MARK = noplacelikehome(subset(het, species == "DO"), periods, krat_excl, Hgran_brkpt)
DM_MARK = noplacelikehome(subset(het, species == "DM"), periods, krat_excl, Hgran_brkpt)
PB_MARK = noplacelikehome(subset(het, species == "PB"), periods, exclosures, Hgran_brkpt)
PP_MARK = noplacelikehome(subset(het, species == "PP"), periods, exclosures, Hgran_brkpt)
PF_MARK = noplacelikehome(subset(het, species == "PF"), periods, exclosures, Hgran_brkpt)
PE_MARK = noplacelikehome(subset(cricet, species == "PE"), periods, exclosures, Cgran_brkpt)
PM_MARK = noplacelikehome(subset(cricet, species == "PM"), periods, exclosures, Cgran_brkpt)
RM_MARK = noplacelikehome(subset(cricet, species == "RM"), periods, exclosures, Cgran_brkpt)
SH_MARK = noplacelikehome(subset(foliv, species == "SH"), periods, exclosures, foli_brkpt)
SF_MARK = noplacelikehome(subset(foliv, species == "SF"), periods, exclosures, foli_brkpt)
NAO_MARK = noplacelikehome(subset(foliv, species == "NAO"), periods, exclosures, nao_brkpt)
OT_MARK = noplacelikehome(subset(insec, species == "OT"), periods, exclosures, ins_brkpt)
OL_MARK = noplacelikehome(subset(insec, species == "OL"), periods, exclosures, ins_brkpt)
#write files to local folder
write.table(DO_MARK, file = "mark_datafiles//do_mark.inp", row.names = F, col.names = F, quote = F)
write.table(DM_MARK, file = "mark_datafiles//dm_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PB_MARK, file = "mark_datafiles//pb_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PP_MARK, file = "mark_datafiles//pp_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PF_MARK, file = "mark_datafiles//pf_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PE_MARK, file = "mark_datafiles//pe_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PM_MARK, file = "mark_datafiles//pm_mark.inp", row.names = F, col.names = F, quote = F)
write.table(RM_MARK, file = "mark_datafiles//rm_mark.inp", row.names = F, col.names = F, quote = F)
write.table(SH_MARK, file = "mark_datafiles//sh_mark.inp", row.names = F, col.names = F, quote = F)
write.table(SF_MARK, file = "mark_datafiles//sf_mark.inp", row.names = F, col.names = F, quote = F)
write.table(NAO_MARK, file = "mark_datafiles//nao_mark.inp", row.names = F, col.names = F, quote = F)
write.table(OT_MARK, file = "mark_datafiles//ot_mark.inp", row.names = F, col.names = F, quote = F)
write.table(OL_MARK, file = "mark_datafiles//ol_mark.inp", row.names = F, col.names = F, quote = F)
allspp = rbind(DO_MARK, DM_MARK, PB_MARK, PP_MARK, PF_MARK, PE_MARK, PM_MARK, RM_MARK, SH_MARK, SF_MARK, NAO_MARK, OT_MARK, OL_MARK)
write.table(allspp, file = "mark_datafiles//all_mark.inp", row.names = F, col.names = F, quote = F)
#write files to local folder
write.table(DO_MARK, file = "mark_datafiles//do_mark.inp", row.names = F, col.names = F, quote = F)
write.table(DM_MARK, file = "mark_datafiles//dm_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PB_MARK, file = "mark_datafiles//pb_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PP_MARK, file = "mark_datafiles//pp_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PF_MARK, file = "mark_datafiles//pf_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PE_MARK, file = "mark_datafiles//pe_mark.inp", row.names = F, col.names = F, quote = F)
write.table(PM_MARK, file = "mark_datafiles//pm_mark.inp", row.names = F, col.names = F, quote = F)
write.table(RM_MARK, file = "mark_datafiles//rm_mark.inp", row.names = F, col.names = F, quote = F)
write.table(SH_MARK, file = "mark_datafiles//sh_mark.inp", row.names = F, col.names = F, quote = F)
write.table(SF_MARK, file = "mark_datafiles//sf_mark.inp", row.names = F, col.names = F, quote = F)
write.table(NAO_MARK, file = "mark_datafiles//nao_mark.inp", row.names = F, col.names = F, quote = F)
write.table(OT_MARK, file = "mark_datafiles//ot_mark.inp", row.names = F, col.names = F, quote = F)
write.table(OL_MARK, file = "mark_datafiles//ol_mark.inp", row.names = F, col.names = F, quote = F)
allspp = rbind(DO_MARK, DM_MARK, PB_MARK, PP_MARK, PF_MARK, PE_MARK, PM_MARK, RM_MARK, SH_MARK, SF_MARK, NAO_MARK, OT_MARK, OL_MARK)
write.table(allspp, file = "mark_datafiles//all_mark.inp", row.names = F, col.names = F, quote = F)
#
doreprdyr
doreprd
doreprdyr
10*10
10*12
alldat = rbind(doreprdyr, dmreprdyr, pbreprdyr, ppreprdyr, pfreprdyr, pereprdyr, pmreprdyr, rmreprdyr,
shreprdyr, sfreprdyr, naoreprdyr, otreprdyr, olreprdyr)
years = c(2000:2009)
spp = c("DO", 'DM', 'PB', 'PP', 'PF', 'PE', 'PM', 'RM', 'SH', 'SF', 'NAO', 'OT', 'OL')
s=1
y=1
m=1
head(dalldat)
head(alldat)
data = subset(alldat, month == mos[m] & species == spp[s])
mos = c(1:12)
data = subset(alldat, month == mos[m] & species == spp[s])
data
avg = mean(data$proprepro)
avg = mean(data$proprepro, na.rm = T)
is.numeric(data$proprepro)
avg = mean(as.numeric(data$proprepro, na.rm = T))
abg
avg
avg = mean(as.numeric(data$proprepro) na.rm = T)
avg = mean(as.numeric(data$proprepro), na.rm = T)
avg
m = 4
data = subset(alldat, month == mos[m] & species == spp[s])
avg = mean(as.numeric(data$proprepro), na.rm = T)
avg_repro = append(avg_repro, avg)
avg
length(data$month > 0.5)
data$month
data
length(data$proprepro > 0.5)
mo_repro = as.numeric(data$proprepro)
mo_repro
avg = mean(mo_repro, na.rm = T)
avg
length(mo_repro > 0.5)
mo_repro
length(mo_repro > 0.5, na.rm = T)
mo_repro = as.numeric(data$proprepro, na.rm = T)
mo_repro
length(mo_repro[mo_repro > 0.5], na.rm = T)
length(mo_repro[mo_repro > 0.5])
length(mo_repro[mo_repro > 0.5, na.rm = T])
m = mo_repro[mo_repro > 0.5])
m = mo_repro[mo_repro > 0.5]
m
length(m, na.rm = T)
is.vector(mo_repro
)
mo_repro = mo_repro[!is.na(mo_repro)]
mo_repro
avg = mean(mo_repro)
avg
length(mo_repro[mo_repro > 0.5])
proportion mos = length(mo_repro[mo_repro > 0.5])/10
mo_repro = mo_repro[!is.na(mo_repro)=0] #remove NAs from data
mo_repro = mo_repro[is.na(mo_repro)=0] #remove NAs from data
mo_repro = as.numeric(data$proprepro)
m = mo_repro[is.na(mo_repro)] = 0
m
mo_repro[is.na(mo_repro)] = 0
mo_repro
mean(mo_repro)
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
avg = mean(mo_repro)
avg
proportion mos = length(mo_repro[mo_repro > 0.5])/10
proportion mos = length(mo_repro[mo_repro > 0.5])    }
prop_mos = length(mo_repro[mo_repro > 0.5])
prop_mos
num_mos = length(mo_repro[mo_repro > 0.5])
num_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)
num_mos
hist(mo_repro)
sd(mo_repro)
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)
prop_mos
prop_mos = round(length(mo_repro[mo_repro > 0.5])/length(mo_repro), 2)
prop_mos
avg_repro = c()
props = c()
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
avg = mean(mo_repro)
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = round(length(mo_repro[mo_repro > 0.5])/length(mo_repro), 2)
props = append(props, prop_mos)
}
else {
props = append(props, NA)
}
}
avg_repro
prop_repro
prop_mos
props
points(mos, props)
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, props)
cbind(mos, props, avg_repro)
help(colorRampPalette)
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
avg = mean(mo_repro)
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = round(length(mo_repro[mo_repro > 0.5])/length(mo_repro), 2)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
z
avg_repro
avg_repro = c()
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
avg = mean(mo_repro)
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = round(length(mo_repro[mo_repro > 0.5])/length(mo_repro), 2)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
avg_repro
z
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s], cex = 1.5)
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s], lwd = 1.5)
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s], lwd = 2)
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
help(colorRamp)
colorFunction <- colorRamp(c("darkblue", "black", "red"))
zScaled <- (z - min(z)) / (max(z) - min(z))
zScaled
z
z <- 1:1000
zScaled <- (z - min(z)) / (max(z) - min(z))
zScaled
zScaled <- (z - 0.00001) / (1 - 0.00001)
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
avg = mean(mo_repro)
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
zScaled <- (z - 0.00001) / (1 - 0.00001)
zScales
zScaled
z
zScaled <- (z - min(z, na.rm=T)) / (max(z, na.rm = T) - min(z, na.rm = T))
zScaled
zScaled <- (z - 0.00001 / (1 - 0.00001)
zScaled <- (z - 0.00001) / (1 - 0.00001)
zScaled
zMatrix <- colorFunction(zScaled)
zMatrix
zColors <- rgb(zMatrix[,1], zMatrix[,2], zMatrix[,3], maxColorValue=255)
zColors
rgb(zMatrix[,1])
zColors <- rgb(zMatrix[,1], zMatrix[,2], zMatrix[,3])
zColors <- rgb(zMatrix[,1], zMatrix[,2], zMatrix[,3], maxColorValue=20000000000)
zColors <- rgb(zMatrix[,1], zMatrix[,2], zMatrix[,3], maxColorValue=300)
colorFunction <- colorRamp(c("darkblue", "black", "red"))
zScaled <- (z - 0.00001) / (1 - 0.00001)
# Apply colorRamp and switch to hexadecimal representation
zMatrix <- colorFunction(zScaled)
zColors <- rgb(zMatrix[,1], zMatrix[,2], zMatrix[,3], maxColorValue=255)
points(mos, avg_repro, col=zColors, pch="+")
z
zColors <- (NA, NA, NA, "red", "hotpink", NA, NA, NA, NA, NA, NA, NA)
zColors <- c(NA, NA, NA, "red", "hotpink", NA, NA, NA, NA, NA, NA, NA)
length(zColors)
points(mos, avg_repro, col=, pch="+")
points(mos, avg_repro, col=zColors, pch="+")
points(mos, avg_repro, col=zColors, pch = 19)
zMatrix <- colorFunction(zScaled)
zMatrix
zColors <- rgb(zMatrix[,1], zMatrix[,2], zMatrix[,3], maxColorValue=255, na.rm = T)
z[1] == NA
z[1] <0
z[1]is.na
is.na(z[1])
points(mos, avg_repro, col = ifelse(z >0.5, "red", "green"))
points(mos, avg_repro, col = ifelse(z <=0.33, z>0.33 & z<0.66, "blue", "green", "pink"), pch = 19)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred"), pch = 19)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred", "cadetblue"), pch = 19)
alldat = rbind(doreprdyr, dmreprdyr, pbreprdyr, ppreprdyr, pfreprdyr, pereprdyr, pmreprdyr, rmreprdyr,
shreprdyr, sfreprdyr, naoreprdyr, otreprdyr, olreprdyr)
mos = c(1:12)
spp = c("DO", 'DM', 'PB', 'PP', 'PF', 'PE', 'PM', 'RM', 'SH', 'SF', 'NAO', 'OT', 'OL')
#plot proportion fecundity by month and year for each species
for (s in 1:length (spp)) {
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
avg = mean(mo_repro)
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred", "cadetblue"), pch = 19)
}
avg
mo_repro
data = subset(alldat, month == mos[m] & species == spp[s])
data
mo
spp[s]
length(mo_repro)
for (s in 1:length (spp)) {
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
if (length(mo_repro > 0)){
avg = mean(mo_repro)
else {
avg = NA }
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred", "cadetblue"), pch = 19)
}
for (s in 1:length (spp)) {
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
if (length(mo_repro > 0)){
avg = mean(mo_repro)
}
else {
avg = NA }
avg_repro = append(avg_repro, avg)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred", "cadetblue"), pch = 19)
}
avg
mos = c(1:12)
spp = c("DO", 'DM', 'PB', 'PP', 'PF', 'PE', 'PM', 'RM', 'SH', 'SF', 'NAO', 'OT', 'OL')
#plot proportion fecundity by month and year for each species
for (s in 1:length (spp)) {
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
if (length(mo_repro > 0)){
avg = mean(mo_repro)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
else {
avg = NA }
avg_repro = append(avg_repro, avg)
}
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred", "cadetblue"), pch = 19)
}
s = 8
m = 10
avg_repro = c()
z = c() # for determining color of points
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
mo_repro
mo_repro
data
length(mo_repro)
avg = mean(mo_repro)
avg
avg>=0.5
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
z
alldat = rbind(doreprdyr, dmreprdyr, pbreprdyr, ppreprdyr, pfreprdyr, pereprdyr, pmreprdyr, rmreprdyr,
shreprdyr, sfreprdyr, naoreprdyr, otreprdyr, olreprdyr)
mos = c(1:12)
spp = c("DO", 'DM', 'PB', 'PP', 'PF', 'PE', 'PM', 'RM', 'SH', 'SF', 'NAO', 'OT', 'OL')
#plot proportion fecundity by month and year for each species
for (s in 1:length (spp)) {
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
if (length(mo_repro > 0)){
avg = mean(mo_repro)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
else {
avg = NA }
avg_repro = append(avg_repro, avg)
}
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, avg_repro, col = ifelse(z >=0.5, "red", "cadetblue"), pch = 19)
}
c = col(rainbow(n))
col=rainbow(n))
col=rainbow(n)
col = rainbow(10)
col
zcols = rainbow(10)
prop_mos
plot(c(1:4), c(8:12), col = zcols)
plot(c(1:4), c(8:11), col = zcols)
plot(c(1:4), c(8:11), col = zcols, pch = 19)
pdf("Fig12_avg_repro_trends_wpts.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,3))
alldat = rbind(doreprdyr, dmreprdyr, pbreprdyr, ppreprdyr, pfreprdyr, pereprdyr, pmreprdyr, rmreprdyr,
shreprdyr, sfreprdyr, naoreprdyr, otreprdyr, olreprdyr)
mos = c(1:12)
spp = c("DO", 'DM', 'PB', 'PP', 'PF', 'PE', 'PM', 'RM', 'SH', 'SF', 'NAO', 'OT', 'OL')
#plot proportion fecundity by month and year for each species
for (s in 1:length (spp)) {
avg_repro = c()
z = c() # for determining color of points
for (m in 1:length (mos)){
data = subset(alldat, month == mos[m] & species == spp[s])
mo_repro = as.numeric(data$proprepro)
mo_repro = mo_repro[!is.na(mo_repro)] #remove NAs from data
if (length(mo_repro > 0)){
avg = mean(mo_repro)
if (avg >= 0.5) {
prop_mos = length(mo_repro[mo_repro > 0.5])/length(mo_repro)  #proportion of months in which the spp was seen that had repro > 50%
z = append(z, prop_mos)
}
else {
z = append(z, NA)
}
}
else {
avg = NA }
avg_repro = append(avg_repro, avg)
}
plot(mos, avg_repro, type = "l", xlim = c(1,12), ylim = c(0,1), pch = 19, xlab = "month",
ylab = "proprotion reproductive fem.", bty = "n", main = spp[s])
abline(h = 0.5, lty = 2, col = 'gray40', lwd = 1)
points(mos, avg_repro, col = ifelse(z >=0.5, "indianred", "cadetblue"), pch = 19)
}
dev.off()
